#!/bin/bash
#
# Shell script to run pipelines from inside the imdtk Docker file
# using the tools it contains. This script should be mounted by
# the container and runs within its environment.
# 

# echo "ARGS=$*"

#############
# Bad pipes:
#############

# headers -ff /images/DC_191217/F356W.fits -ofmt xxx
# headers -ff /images/DC_191217/F356W.fits | aliases -v -g -ofmt xxx


#############
# Good pipes:
#############

# Headers only:
# headers -v -ff /images/DC_191217/F356W.fits

# Headers only, generate filename:
# headers -v -ff /images/DC_191217/F356W.fits -g

# Headers only, named filename:
# headers -v -ff /images/DC_191217/F356W.fits -of /work/F356W_headers.json

# Headers to aliases:
# headers -v -ff /images/DC_191217/F356W.fits | aliases -v -g

# Last tool debug and generate filename:
# headers -ff /images/DC_191217/F356W.fits | aliases -d -g

# Explicit intermediate file pipeline:
# headers -d -ff /images/DC_191217/F356W.fits -of /work/h.json
# aliases -d -if /work/h.json -of /work/ha.json
# fields_info -d -if /work/ha.json -of /work/had.json

# Explicit intermediate file pipeline with non-json names:
# headers -d -ff /images/DC_191217/F356W.fits -of /work/h1
# aliases -d -if /work/h1 -of /work/ha1
# fields_info -d -if /work/ha1 -of /work/had1

# Last tool verbose:
# headers -ff /images/DC_191217/F356W.fits | aliases | fields_info -v

# All tools verbose, specify collection:
# headers -v -ff /images/DC_191217/F356W.fits | aliases -v | fields_info -v | oc_calc -v -c TEST_COLL -ff /images/DC_191217/F356W.fits -g

# All tools verbose:
headers -v -ff /images/DC_191217/F356W.fits | aliases -v | fields_info -v | oc_calc -v -ff /images/DC_191217/F356W.fits -g
